{"version":3,"file":"static/js/681.172af17c.chunk.js","mappings":"yNAmCA,UA9BgB,WACZ,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,qGACgBC,EAAAA,EAAAA,IAAkBJ,GADlC,OACZK,EADY,OAElBN,EAAgBM,GAFE,2CAAH,qDAKfF,IAAYG,MAAMC,QAAQC,MAC7B,GAAE,CAACR,KAIA,iCACI,oCACEF,EAAaW,OAAS,GACxB,6BACSX,EAAaY,KAAI,SAAAC,GAAM,OACpB,4BACI,0BAAG,mCAAH,IAAmBA,EAAOC,WAC1B,uBAAID,EAAOE,YAFLF,EAAOG,GADG,OAMb,uEAE9B,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport { fetchMovieReviews } from '../api/fetchFunction';\n\nconst Reviews = () => {\n    const [movieReviews, setMovieReviews] = useState([]);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {   \n        const fetchData = async () => {\n        const searchMoviesReviews = await fetchMovieReviews(movieId);\n        setMovieReviews(searchMoviesReviews);\n        }  \n    \n        fetchData().catch(console.error);\n    }, [movieId]);\n\n\n    return (\n        <>\n            <h2>Reviews</h2>\n            {(movieReviews.length > 0) ? (\n            <section>\n                    {movieReviews.map(review => (\n                        <div key={review.id}>\n                            <p><b>Author:</b> {review.author}</p>\n                            <p>{review.content}</p>\n                        </div>\n                     ))}\n                </section>) : (<p>We don`t have any reviews for this movie.</p>)}\n        </>);\n}\n\nexport default Reviews;"],"names":["useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","fetchData","fetchMovieReviews","searchMoviesReviews","catch","console","error","length","map","review","author","content","id"],"sourceRoot":""}